[{"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/index.js":"1","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/App.js":"2","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/Recipe.js":"3","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/ingredientSpecs.js":"4","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/Notfound.js":"5","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/PaypallPage.js":"6"},{"size":148,"mtime":1607179265739,"results":"7","hashOfConfig":"8"},{"size":1741,"mtime":1616921060366,"results":"9","hashOfConfig":"8"},{"size":992,"mtime":1616919191694,"results":"10","hashOfConfig":"8"},{"size":636,"mtime":1607379486982,"results":"11","hashOfConfig":"8"},{"size":176,"mtime":1607349779320,"results":"12","hashOfConfig":"8"},{"size":1255,"mtime":1607953704481,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9lonkl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/index.js",[],["30","31"],"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/App.js",[],"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/Recipe.js",["32"],"import React,{useState ,useContext} from 'react'\nimport IngredientSpecs from \"./ingredientSpecs\"\nimport PaypallPage from './PaypallPage';\nimport {MyContext} from \"../App\"\n\nconst Recipe = ({recipe}) => {\n    const context = useContext(MyContext)\n    const [show,setShow] =useState(false)\n    const {label,image,url, ingredients} = recipe.recipe;\n    const [buy ,setBuy]= useState(false)\n\n    return (\n        <div className=\"recipe\">\n            {buy? <PaypallPage recipe={recipe} /> : <div >\n            <h2>{label} </h2>\n            <img src={image} alt={label} />\n            <div><a href={url} target=\"blank\" >check more</a></div>\n            <div><button onClick={()=> setShow(!show )} >Ingredients</button></div>\n            {show && <IngredientSpecs ingredients={ingredients} />} \n            </div>}\n            <div className=\"btn\">\n                <button onClick={()=> setBuy(!buy)}>{buy? \"Back\" :\"Order\"} </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Recipe\n\n","/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/ingredientSpecs.js",[],["33","34"],"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/Notfound.js",[],"/home/dci/Desktop/DCI/SuperReact/food-menu-pjt/src/Components/PaypallPage.js",["35","36"],"import React, {useRef,useEffect,useContext } from 'react'\nimport Recipe from './Recipe'\nimport {v4 as uuidv4} from \"uuid\"\nimport {MyContext} from \"../App\"\n\nexport default function PaypallPage(props) {\n\n    const {back,setBack ,Recipes,setRecipes} = useContext(MyContext)\n    const btn = useRef()\n\n    useEffect(() => {\n        console.log(window);\n    window.paypal.Buttons({\n        createOrder: (data,action)=>{\n            return action.order.create({\n                purchase_units: [\n                    {\n                      amount: {\n                        value: \"50\",\n                      },\n                    },\n                  ],\n            })\n        },\n        onApprove:(data,action)=>{\n            console.log(data,action)\n            return action.order.capture()\n        } ,\n        onCancel:(data,action)=>{console.log(data,action)} \n    }).render(btn.current)\n        \n    }, [props.recipe])\n\n    return (\n        <div className=\"box\">\n            {back?  <div ref={btn} className=\"pay\">\n            <h3> THANK YOU FOR USING OUR BUFFET SERVICE </h3>\n            <h4> Price: 50 â‚¬  Per Person </h4>\n        </div>: Recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />) }\n            \n        </div>\n        \n    )\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":7,"column":11,"nodeType":"43","messageId":"44","endLine":7,"endColumn":18},{"ruleId":"37","replacedBy":"45"},{"ruleId":"39","replacedBy":"46"},{"ruleId":"41","severity":1,"message":"47","line":8,"column":17,"nodeType":"43","messageId":"44","endLine":8,"endColumn":24},{"ruleId":"41","severity":1,"message":"48","line":8,"column":34,"nodeType":"43","messageId":"44","endLine":8,"endColumn":44},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'context' is assigned a value but never used.","Identifier","unusedVar",["49"],["50"],"'setBack' is assigned a value but never used.","'setRecipes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]